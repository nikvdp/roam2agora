name: Package Application with Pyinstaller

on:
  push:
    branches: [ master, pyinstaller ]
  pull_request:
    branches: [ master ]

jobs:
  # build-linux:
  #   # TODO: convert this to use pyoxidizer instead
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #   - uses: actions/checkout@v2
  #
  #   - name: Package Application
  #     uses: JackMcKew/pyinstaller-action-linux@main
  #     with:
  #       path: .
  #
  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: roam2agora
  #       path: ./dist/linux/main
  #
  # build-windows:
  #
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #   - uses: actions/checkout@v2
  #
  #   - name: Package Application
  #     uses: JackMcKew/pyinstaller-action-windows@main
  #     with:
  #       path: .
  #
  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: roam2agora.exe
  #       path: ./dist/windows/main.exe

  build-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: pyinstaller
      run: |
        install_conda() {
          local platform=$(uname)
          local platform=$(uname)
          [[ "$platform" == "Darwin" ]] && platform="MacOSX"

          local miniconda="$(mktemp)"
          curl -L "https://repo.continuum.io/miniconda/Miniconda3-latest-$platform-x86_64.sh" >"$miniconda"
          bash "$miniconda" -b -p $HOME/miniconda3
          rm "$miniconda"

          if ! [[ -f ~/.condarc ]]; then
            echo ">>> Writing $HOME/.condarc"
            cat >$HOME/.condarc <<EOF
        always_yes: true
        channels:
            - conda-forge
            - defaults
        EOF

          fi
          # ensure conda is on path for the rest of this script
          if ! echo $PATH | grep -q miniconda; then
            export PATH=$HOME/miniconda3/bin:$HOME/miniconda2/bin:$PATH
          fi
        }
        install_conda

        echo ">>> PATH: "
        echo "$PATH" | tr ':' '\n'  
        echo "<<< END PATH. "

        export PATH=$HOME/miniconda3/bin:$HOME/miniconda2/bin:$PATH

        conda create -n roam2agora python=3.8 pyinstaller
        source activate roam2agora

        pip install .

        pyinstaller roam2agora.spec

        mkdir $GITHUB_WORKSPACE/artifacts
        cp ./dist/main "$GITHUB_WORKSPACE/artifacts/roam2agora"

    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3

    - name: Upload result
      uses: actions/upload-artifact@v2
      with:
        name: roam2agora
        path: ./artifacts/roam2agora



